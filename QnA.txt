Question:
첫 번째 콘솔 출력에서 data의 값은 undefined이고, 두 번째 콘솔 출력에서 데이터가 출력되는 이유

Answer:
ChatGTP:
React Query의 useQuery 훅은 비동기적으로 데이터를 가져옵니다. 
컴포넌트가 처음 렌더링될 때는 데이터 요청이 아직 완료되지 않았기 때문에 data 값이 undefined로 설정됩니다. 
그 후 getPosts 함수가 성공적으로 데이터를 가져오면, React Query가 컴포넌트 상태를 업데이트(리렌더링)하고 컴포넌트가 다시 렌더링됩니다. 
따라서 두 번째 렌더링에서는 data 값이 제대로 설정됩니다.
Codeit: 
가장 처음 컴포넌트가 마운트되고(DOM 트리에 추가되고) useQuery()가 실행되면서, 데이터를 아직 받아오기 전이므로 'pending' 상태가 되는 것이죠.
그 후에 찍힌 두 번째 결괏값을 살펴보면 status가 'success'로 되어 있고, data 항목에서 실제 데이터들도 확인할 수 있습니다.


요약
1. 컴포넌트가 처음 렌더링될 때 useQuery 훅은 데이터 요청을 시작합니다. 이 시점에서는 data가 undefined입니다.
2. 데이터 요청이 완료되면 React Query가 상태를 업데이트하고 컴포넌트가 다시 렌더링됩니다. 이 때는 data에 실제 데이터가 설정됩니다.

Question:
codestudit을 실행했을 때 응답으로 304가 계속 발생하는 이유

Answer: 
300번대 코드는 뭘 의미하나?
300번대 코드들은 요청된 자원에 대한 리디렉션을 의미한다. 
그 중에서도 304, "Not Modified"는 요청한 자원에 대해 변경된 사항이 없으므로 캐시되어 있는 자원으로 리디렉션 하겠다는 의미이다.
참고: https://maicoding.tistory.com/45



